# Generated by Django 5.2.4 on 2025-07-07 08:06

import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnalysisSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session_name', models.CharField(max_length=255)),
                ('total_sheets', models.IntegerField(default=0)),
                ('total_expenses', models.IntegerField(default=0)),
                ('flagged_sheets', models.IntegerField(default=0)),
                ('analysis_status', models.CharField(default='PENDING', max_length=20)),
                ('model_config', models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sheet_name', models.CharField(help_text='Name of the expense sheet', max_length=255)),
                ('sheet_date', models.DateField(help_text='Date of the expense sheet')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('total_expenses', models.IntegerField(default=0)),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
            ],
            options={
                'unique_together': {('sheet_name', 'sheet_date')},
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('category', models.CharField(max_length=100)),
                ('subcategory', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
                ('employee', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(max_length=10)),
                ('payment_method', models.CharField(max_length=50)),
                ('vendor_supplier', models.CharField(max_length=255)),
                ('receipt_number', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=50)),
                ('approved_by', models.CharField(max_length=100)),
                ('notes', models.TextField(blank=True, null=True)),
                ('expense_sheet', models.ForeignKey(help_text='The expense sheet this expense belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='core.expensesheet')),
            ],
        ),
        migrations.CreateModel(
            name='SheetAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('overall_fraud_score', models.FloatField()),
                ('isolation_forest_score', models.FloatField()),
                ('xgboost_score', models.FloatField()),
                ('lof_score', models.FloatField()),
                ('random_forest_score', models.FloatField()),
                ('risk_level', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical Risk')], default='LOW', max_length=10)),
                ('analysis_details', models.JSONField(default=dict)),
                ('amount_anomalies_detected', models.IntegerField(default=0)),
                ('timing_anomalies_detected', models.IntegerField(default=0)),
                ('vendor_anomalies_detected', models.IntegerField(default=0)),
                ('employee_anomalies_detected', models.IntegerField(default=0)),
                ('duplicate_suspicions', models.IntegerField(default=0)),
                ('total_flagged_expenses', models.IntegerField(default=0)),
                ('high_risk_expenses', models.IntegerField(default=0)),
                ('critical_risk_expenses', models.IntegerField(default=0)),
                ('expense_sheet', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analysis', to='core.expensesheet')),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('fraud_score', models.FloatField()),
                ('risk_level', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical Risk')], default='LOW', max_length=10)),
                ('amount_anomaly', models.BooleanField(default=False)),
                ('timing_anomaly', models.BooleanField(default=False)),
                ('vendor_anomaly', models.BooleanField(default=False)),
                ('employee_anomaly', models.BooleanField(default=False)),
                ('duplicate_suspicion', models.BooleanField(default=False)),
                ('analysis_details', models.JSONField(default=dict)),
                ('expense', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analysis', to='core.expense')),
                ('sheet_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expense_analyses', to='core.sheetanalysis')),
            ],
        ),
    ]
