# Generated by Django 5.2.4 on 2025-07-17 09:54

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnalysisSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_name', models.CharField(help_text='Analysis session name', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Session description', null=True)),
                ('date_from', models.DateField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('min_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('max_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('document_types', models.JSONField(default=list, help_text='Filter by document types')),
                ('gl_accounts', models.JSONField(default=list, help_text='Filter by G/L accounts')),
                ('profit_centers', models.JSONField(default=list, help_text='Filter by profit centers')),
                ('users', models.JSONField(default=list, help_text='Filter by users')),
                ('total_transactions', models.IntegerField(default=0)),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20)),
                ('flagged_transactions', models.IntegerField(default=0)),
                ('high_value_transactions', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('RUNNING', 'Running'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'analysis_sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_name', models.CharField(help_text='Original file name', max_length=255)),
                ('file_size', models.BigIntegerField(help_text='File size in bytes')),
                ('engagement_id', models.CharField(help_text='Engagement ID for the audit', max_length=100)),
                ('client_name', models.CharField(help_text='Client name', max_length=255)),
                ('company_name', models.CharField(help_text='Company name', max_length=255)),
                ('fiscal_year', models.IntegerField(help_text='Fiscal year for the audit')),
                ('audit_start_date', models.DateField(help_text='Audit start date')),
                ('audit_end_date', models.DateField(help_text='Audit end date')),
                ('total_records', models.IntegerField(default=0, help_text='Total records in file')),
                ('processed_records', models.IntegerField(default=0, help_text='Successfully processed records')),
                ('failed_records', models.IntegerField(default=0, help_text='Failed to process records')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('PARTIAL', 'Partially Processed')], default='PENDING', max_length=20)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('min_date', models.DateField(blank=True, null=True)),
                ('max_date', models.DateField(blank=True, null=True)),
                ('min_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('max_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
            ],
            options={
                'db_table': 'data_files',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='GLAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('account_id', models.CharField(db_index=True, help_text='GL Account ID', max_length=20, unique=True)),
                ('account_name', models.CharField(help_text='GL Account Name', max_length=255)),
                ('account_type', models.CharField(help_text='Account Type (Asset, Liability, Equity, Revenue, Expense)', max_length=50)),
                ('account_category', models.CharField(help_text='Account Category (e.g., Cash, Accounts Receivable, etc.)', max_length=100)),
                ('account_subcategory', models.CharField(blank=True, help_text='Account Subcategory', max_length=100, null=True)),
                ('normal_balance', models.CharField(choices=[('DEBIT', 'Debit'), ('CREDIT', 'Credit')], help_text='Normal balance side', max_length=10)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the account is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'gl_accounts',
                'ordering': ['account_id'],
            },
        ),
        migrations.CreateModel(
            name='SAPGLPosting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document_number', models.CharField(db_index=True, help_text='SAP Document Number', max_length=20)),
                ('posting_date', models.DateField(help_text='Posting Date')),
                ('gl_account', models.CharField(db_index=True, help_text='G/L Account Number', max_length=20)),
                ('amount_local_currency', models.DecimalField(decimal_places=2, help_text='Amount in Local Currency', max_digits=20)),
                ('transaction_type', models.CharField(choices=[('DEBIT', 'Debit'), ('CREDIT', 'Credit')], default='DEBIT', help_text='Transaction type (Debit or Credit)', max_length=10)),
                ('local_currency', models.CharField(default='SAR', help_text='Local Currency Code', max_length=10)),
                ('text', models.TextField(blank=True, help_text='Transaction Text', null=True)),
                ('document_date', models.DateField(blank=True, help_text='Original Document Date', null=True)),
                ('offsetting_account', models.CharField(blank=True, help_text='Offsetting Account', max_length=20, null=True)),
                ('user_name', models.CharField(db_index=True, help_text='User Name', max_length=50)),
                ('entry_date', models.DateField(blank=True, help_text='Entry Date', null=True)),
                ('document_type', models.CharField(blank=True, db_index=True, help_text='Document Type (DZ, SA, TR, AB, etc.)', max_length=10, null=True)),
                ('profit_center', models.CharField(blank=True, db_index=True, help_text='Profit Center Code', max_length=20, null=True)),
                ('cost_center', models.CharField(blank=True, help_text='Cost Center Code', max_length=20, null=True)),
                ('clearing_document', models.CharField(blank=True, help_text='Clearing Document Number', max_length=20, null=True)),
                ('segment', models.CharField(blank=True, help_text='Segment Code', max_length=20, null=True)),
                ('wbs_element', models.CharField(blank=True, help_text='WBS Element', max_length=20, null=True)),
                ('plant', models.CharField(blank=True, help_text='Plant Code', max_length=20, null=True)),
                ('material', models.CharField(blank=True, help_text='Material Number', max_length=20, null=True)),
                ('invoice_reference', models.CharField(blank=True, help_text='Invoice Reference', max_length=20, null=True)),
                ('billing_document', models.CharField(blank=True, help_text='Billing Document', max_length=20, null=True)),
                ('sales_document', models.CharField(blank=True, help_text='Sales Document', max_length=20, null=True)),
                ('purchasing_document', models.CharField(blank=True, help_text='Purchasing Document', max_length=20, null=True)),
                ('order_number', models.CharField(blank=True, help_text='Order Number', max_length=20, null=True)),
                ('asset_number', models.CharField(blank=True, help_text='Asset Number', max_length=20, null=True)),
                ('network', models.CharField(blank=True, help_text='Network Number', max_length=20, null=True)),
                ('assignment', models.CharField(blank=True, help_text='Assignment Field', max_length=20, null=True)),
                ('tax_code', models.CharField(blank=True, help_text='Tax Code', max_length=10, null=True)),
                ('account_assignment', models.CharField(blank=True, help_text='Account Assignment', max_length=20, null=True)),
                ('fiscal_year', models.IntegerField(help_text='Fiscal Year')),
                ('posting_period', models.IntegerField(help_text='Posting Period (1-16)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(16)])),
                ('year_month', models.CharField(blank=True, help_text='Year/Month (YYYY/MM)', max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('gl_account_ref', models.ForeignKey(blank=True, help_text='Reference to GL Account details', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='postings', to='core.glaccount')),
            ],
            options={
                'db_table': 'sap_gl_postings',
                'ordering': ['-posting_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metric_date', models.DateField(db_index=True, help_text='Date of the metric')),
                ('total_transactions', models.IntegerField(default=0)),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20)),
                ('new_transactions', models.IntegerField(default=0)),
                ('new_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20)),
                ('active_users', models.IntegerField(default=0)),
                ('unique_documents', models.IntegerField(default=0)),
                ('unique_accounts', models.IntegerField(default=0)),
                ('analyses_run', models.IntegerField(default=0)),
                ('flagged_transactions', models.IntegerField(default=0)),
                ('high_risk_transactions', models.IntegerField(default=0)),
                ('avg_processing_time', models.FloatField(default=0.0, help_text='Average processing time in seconds')),
                ('max_processing_time', models.FloatField(default=0.0, help_text='Maximum processing time in seconds')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'system_metrics',
                'ordering': ['-metric_date'],
                'unique_together': {('metric_date',)},
            },
        ),
        migrations.CreateModel(
            name='TransactionAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('risk_score', models.FloatField(default=0.0, help_text='Overall risk score (0-100)')),
                ('risk_level', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical Risk')], default='LOW', max_length=10)),
                ('amount_anomaly', models.BooleanField(default=False, help_text='Unusual amount flag')),
                ('timing_anomaly', models.BooleanField(default=False, help_text='Unusual timing flag')),
                ('user_anomaly', models.BooleanField(default=False, help_text='Unusual user behavior flag')),
                ('account_anomaly', models.BooleanField(default=False, help_text='Unusual account usage flag')),
                ('pattern_anomaly', models.BooleanField(default=False, help_text='Unusual pattern flag')),
                ('analysis_details', models.JSONField(default=dict, help_text='Detailed analysis results')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analyses', to='core.analysissession')),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analysis', to='core.sapglposting')),
            ],
            options={
                'db_table': 'transaction_analyses',
                'ordering': ['-risk_score', '-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='sapglposting',
            index=models.Index(fields=['document_number', 'fiscal_year'], name='sap_gl_post_documen_6f2af9_idx'),
        ),
        migrations.AddIndex(
            model_name='sapglposting',
            index=models.Index(fields=['gl_account', 'posting_date'], name='sap_gl_post_gl_acco_9f5a9d_idx'),
        ),
        migrations.AddIndex(
            model_name='sapglposting',
            index=models.Index(fields=['user_name', 'posting_date'], name='sap_gl_post_user_na_a22909_idx'),
        ),
        migrations.AddIndex(
            model_name='sapglposting',
            index=models.Index(fields=['profit_center', 'fiscal_year'], name='sap_gl_post_profit__1212e9_idx'),
        ),
        migrations.AddIndex(
            model_name='sapglposting',
            index=models.Index(fields=['amount_local_currency', 'posting_date'], name='sap_gl_post_amount__2fbc1c_idx'),
        ),
        migrations.AddIndex(
            model_name='sapglposting',
            index=models.Index(fields=['transaction_type', 'gl_account'], name='sap_gl_post_transac_c8474e_idx'),
        ),
    ]
